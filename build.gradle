apply plugin: 'java'
apply plugin: 'war'

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/log4j/log4j
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
}

task GetCurrentVersion << {
    println rev
}

task ChangeCurrentVersion << {
    def propsFile = file('gradle.properties')
    def versionProps = new Properties()
    versionProps.load(propsFile.newDataInputStream())
    def versionMajor = versionProps['major'].toInteger()
    def versionMinor = versionProps['minor'].toInteger()
    def versionBuild = versionProps['build'].toInteger() +1
    def rev = "${versionMajor}.${versionMinor}.${versionBuild}"
    versionProps['major'] = versionMajor.toString()
    versionProps['minor'] = versionMinor.toString()
    versionProps['build'] = versionBuild.toString()
    versionProps['rev'] = rev.toString()
    versionProps.store(propsFile.newWriter(), null)
    println rev
}

task WriteGreeting (dependsOn:check){
    doLast {
        def propsFile1 = file('/build/resources/main/greeting.txt')
        if (propsFile1.exists()) propsFile1.delete()
        def propsFile = file('gradle.properties')
        def versionProps = new Properties()
        versionProps.load(propsFile.newDataInputStream())
        def versionMajor = versionProps['major'].toInteger()
        def versionMinor = versionProps['minor'].toInteger()
        def versionBuild = versionProps['build'].toInteger()
        def rev = "${versionMajor}.${versionMinor}.${versionBuild}"
        propsFile1 << rev
        println rev
    }
}

task sorting << {
    //unsorted array of versions
    def unsortedArray = [
        '1.1.3',
        '1.1.0',
        '1.10.2',
        '1.9.1',
        '1.1.8',
        '1.1.15'
    ]
    // insert code here to sort array
    def vers = unsortedArray
    .sort({a, b ->
        GradleVersion.version(a).compareTo(GradleVersion.version(b))
        })
    def sortedArray = vers
    println sortedArray // it should print to console correctly sorted array
    // example of correct output [1.1.0, 1.1.3, 1.1.8, 1.1.15, 1.9.1, 1.10.2]
}


task sort << {
    def vers = [
        '1.1.3',
        '1.1.0',
        '1.10.2',
        '1.9.1',
        '1.1.8',
        '1.1.15'
    ]
    .sort({a, b ->
        GradleVersion.version(a).compareTo(GradleVersion.version(b))
        })
    println vers
}

build{
    dependsOn WriteGreeting
}